// Generated by CoffeeScript 1.9.3
(function() {
  this.Extension = (function() {
    function Extension() {}

    Extension.emit = function(tabId, to, method, params, callback) {
      var data;
      console.log('>', to, method, params);
      data = {
        from: 'popup',
        to: to,
        method: method,
        params: params
      };
      if (to === 'content') {
        chrome.tabs.sendMessage(tabId, data, callback);
      } else {
        chrome.runtime.sendMessage(data, callback);
      }
    };

    Extension.waitTabLoaded = function(tabId, callback) {
      var h;
      h = setInterval((function() {
        return chrome.tabs.executeScript(tabId, {
          runAt: 'document_end',
          code: 'document.readyState;'
        }, function(data) {
          if (data && data[0] === 'complete') {
            clearInterval(h);
            setTimeout(callback, 1000);
          }
        });
      }), 500);
    };

    Extension.setMarks = function(tabId, students, overwriteOld, callback) {
      Extension.emit(tabId, 'content', 'setMarks', {
        students: students,
        overwriteOld: overwriteOld
      }, callback);
    };

    return Extension;

  })();

  angular.module('ext', ['ui.router']).config(function($stateProvider, $urlRouterProvider) {
    $urlRouterProvider.otherwise("/");
    return $stateProvider.state('index', {
      url: "/?tab",
      templateUrl: '/page/templates/index.html',
      controller: 'index'
    });
  }).filter('join', function() {
    return function(x, y) {
      return x.join(y);
    };
  }).controller('index', [
    '$scope', '$stateParams', function($scope, $stateParams) {
      console.log($stateParams.tab * 1);
      $scope.labs = {
        minCnt: 3,
        cnt: 8
      };
      $scope.$watch((function() {
        return JSON.stringify($scope.labs);
      }), function() {
        var al, i, j, k, len, len1, len2, m, maxL, minL, n, o, q, ref, sl, students;
        if (!$scope.labs.text) {
          return;
        }
        students = $scope.labs.text.split("\n");
        sl = 0;
        students = students.map(function(p) {
          var cur, i, info, j, k, l, labs, len, len1, len2, m, n, name, o, ref;
          labs = [];
          info = p.split(',');
          name = info[0];
          info[0] = '';
          for (m = 0, len = info.length; m < len; m++) {
            i = info[m];
            cur = 0;
            ref = i.split(/[^\d]/).join('');
            for (n = 0, len1 = ref.length; n < len1; n++) {
              j = ref[n];
              for (o = 0, len2 = j.length; o < len2; o++) {
                k = j[o];
                k *= 1;
                if (cur) {
                  labs.push(cur * 10 + k);
                  cur = 0;
                } else {
                  if (labs.indexOf(k) === -1) {
                    labs.push(k);
                  } else {
                    if (k * 10 <= $scope.labs.cnt) {
                      cur = k;
                    }
                  }
                }
              }
            }
          }
          if ($scope.labs.minCnt) {
            while (labs.length < $scope.labs.minCnt) {
              labs.push('нб');
            }
          }
          if ($scope.labs.cnt) {
            while (labs.length < $scope.labs.cnt) {
              labs.push('нз');
            }
          }
          l = info.join('').length;
          sl += l;
          return {
            name: name,
            labs: labs,
            l: l
          };
        });
        al = sl / students.length;
        minL = 1e9;
        maxL = -1e9;
        for (m = 0, len = students.length; m < len; m++) {
          i = students[m];
          i.l = (i.l - al) / al;
          minL = Math.min(minL, i.l);
          maxL = Math.max(maxL, i.l);
        }
        q = 2;
        for (n = 0, len1 = students.length; n < len1; n++) {
          i = students[n];
          i.l = (i.l - minL) / (maxL - minL);
          ref = i.labs;
          for (k = o = 0, len2 = ref.length; o < len2; k = ++o) {
            j = ref[k];
            if (j * 1 === j) {
              i.labs[k] = 10 - Math.round(6 * (1 - i.l) + q * (Math.random() - 0.5));
              i.labs[k] = Math.max(4, i.labs[k]);
              i.labs[k] = Math.min(10, i.labs[k]);
            }
          }
          i.l = Math.round(i.l * 100) / 100;
        }
        return $scope.students = students;
      });
      $scope.go = function() {
        return Extension.setMarks($stateParams.tab * 1, $scope.students, $scope.labs.overwriteOld);
      };
    }
  ]).controller('init', [function() {}]);

}).call(this);

//# sourceMappingURL=module.js.map
